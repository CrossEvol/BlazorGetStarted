@page "/drawer"
@rendermode InteractiveServer
@using BlazorAppPizza.Services
@using BlazorAppPizza.Components.Shard

@inject DemoListState DemoListState
@inject IDialogService DialogService

<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   NoHeader="true"
                   Position="DialogPosition.CenterLeft"
                   CloseOnEscapeKey="true" />

<MudPaper Height="600px" Style="overflow:hidden; position:relative;">
    <MudDrawerContainer Class="mud-height-full">
        <MudDrawer @bind-Open="@open" Elevation="0" Variant="@DrawerVariant.Persistent" Color="Color.Primary">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">My App</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                @if (list.Any())
                {
                    @foreach (var item in list)
                    {
                        <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard" IconColor="Color.Inherit">@item</MudNavLink>
                    }
                }
                else
                {
                    <MudText Typo="Typo.button">Empty List.</MudText>
                }
            </MudNavMenu>
        </MudDrawer>
        <div class="d-flex flex-column justify-center align-center mud-height-full">
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@ToggleDrawer">Persistent drawer</MudButton>
            <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
                Open Simple Dialog
            </MudButton>
        </div>
    </MudDrawerContainer>
</MudPaper>
@code
{
    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    }

    List<string> list => DemoListState.list;

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<DrawerDialog>("Simple Dialog", options);
    }
}