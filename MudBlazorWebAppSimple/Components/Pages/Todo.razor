@page "/todo"
@using Bogus
@rendermode InteractiveServer

<style>
	.selected {
		background-color: #1E88E5 !important;
	}

		.selected > td {
			color: white !important;
		}

			.selected > td .mud-input {
				color: white !important;
			}
</style>

<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<PageTitle>Weather</PageTitle>

<MudText Class="pl-4" Typo="Typo.h2" Align="Align.Left"><b>Todo Grid</b></MudText>
<MudText Typo="Typo.subtitle1" Class="m-8 pl-4">This component demonstrates processing data on the local storage.</MudText>

@if (todos == null)
{
	<MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
	<MudTable T="TodoEntity" Items="todos" Hover="true" SortLabel="Sort By" Elevation="0" @ref="mudTable"
			  RowClass="cursor-pointer" RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent">
		<HeaderContent>
			<MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<TodoEntity, object>(x=>x.ID)">ID</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.Title)">Title</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.Content)">Content</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.Priority)">Priority</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<TodoEntity, object>(x=>x.Tags)">Tags</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.CreatedAt)">CreatedAt</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.UpdatedAt)">UpdatedAt</MudTableSortLabel></MudTh>
			<MudTh><MudTableSortLabel SortBy="new Func<TodoEntity, object>(x=>x.IsDone)">IsDone</MudTableSortLabel></MudTh>
		</HeaderContent>
		<RowTemplate>
			<MudTd DataLabel="ID">@context.ID</MudTd>
			<MudTd DataLabel="Title">@context.Title</MudTd>
			<MudTd DataLabel="Content">@context.Content</MudTd>
			<MudTd DataLabel="Priority">@context.Priority</MudTd>
			<MudTd DataLabel="Tags">@context.Tags</MudTd>
			<MudTd DataLabel="CreatedAt">@context.CreatedAt</MudTd>
			<MudTd DataLabel="UpdatedAt">@context.UpdatedAt</MudTd>
			<MudTd DataLabel="IsDone">@context.IsDone</MudTd>
		</RowTemplate>
		<PagerContent>
			<MudTablePager PageSizeOptions="new int[] { 5, 10, 20, 50 }" />
		</PagerContent>
	</MudTable>
}

@code {
	private TodoEntity[]? todos;
	private int autoIndex;
	private int selectedRowNumber = -1;
	private MudTable<TodoEntity> mudTable;
	private List<string> clickedEvents = new();

	protected override async Task OnInitializedAsync()
	{
		// Simulate asynchronous loading to demonstrate streaming rendering
		await Task.Delay(500);

		// var startDate = DateOnly.FromDateTime(DateTime.Now);
		// var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
		todos = Enumerable.Range(1, 25).Select(index => new TodoEntity
			{
				ID = ++autoIndex,
				Title = new Bogus.DataSets.Hacker().Noun(),
				Content = new Bogus.DataSets.Lorem("ja").Sentence(5),
				Tags = Enumerable.Range(1, 2).Select(index => new Faker().PickRandom<Tag>()).ToArray(),
			}).ToArray();
	}

	private class TodoEntity
	{
		public int ID { get; set; }
		public string Title { get; set; } = string.Empty;
		public string Content { get; set; } = string.Empty;
		public Priority Priority { get; set; } = Priority.Medium;
		public Tag[] Tags { get; set; } = [];
		public DateTime CreatedAt { get; set; } = DateTime.Now;
		public DateTime UpdatedAt { get; set; } = DateTime.Now;
		public bool IsDone { get; set; } = false;
	}

	enum Priority
	{
		High,
		Medium,
		Low
	}

	enum Tag
	{
		Work,
		Study,
		Exercise,
		Relaxation,
		Socializing,
		Cooking,
		Traveling,
		Reading,
		Creativity,
		Reflection
	}

	private void RowClickEvent(TableRowClickEventArgs<TodoEntity> tableRowClickEventArgs)
	{
		clickedEvents.Add("Row has been clicked");
	}

	private string SelectedRowClassFunc(TodoEntity element, int rowNumber)
	{
		if (selectedRowNumber == rowNumber)
		{
			selectedRowNumber = -1;
			clickedEvents.Add("Selected Row: None");
			return string.Empty;
		}
		else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(element))
		{
			selectedRowNumber = rowNumber;
			clickedEvents.Add($"Selected Row: {rowNumber}");
			return "selected";
		}
		else
		{
			return string.Empty;
		}
	}

}
